"""
Django settings for location_tracker_project project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
"""
Django settings for location_tracker_project project.
"""
from pathlib import Path
import dj_database_url
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Deployment Settings ---
# SECRET_KEY, DEBUG, ALLOWED_HOSTS will be configured for both development and production (Render)

# Get the secret key from environment variables. For development, a default key is used.
SECRET_KEY = os.environ.get(
    'SECRET_KEY', 'django-insecure-your-default-dev-key')

# DEBUG will be True in development and False on Render
DEBUG = 'RENDER' not in os.environ

ALLOWED_HOSTS = []

# If on Render, add the Render hostname to ALLOWED_HOSTS
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

# Add localhost and your local IP for development
ALLOWED_HOSTS.extend(['127.0.0.1', 'localhost', '192.168.0.113'])


# --- Application definition ---
INSTALLED_APPS = [
    'daphne',  # Must be first for ASGI server
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # For serving static files in development with runserver
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'tracker_app',
    'pwa',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # Place it right after SecurityMiddleware
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'location_tracker_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # API की साठी context processor
                'tracker_app.context_processors.google_maps_api_key',
            ],
        },
    },
]

# --- ASGI/WSGI and Channel Layer ---
WSGI_APPLICATION = 'location_tracker_project.wsgi.application'
ASGI_APPLICATION = 'location_tracker_project.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}

# --- Database ---
# Uses PostgreSQL on Render and SQLite locally
DATABASES = {
    'default': dj_database_url.config(
        default=f'sqlite:///{BASE_DIR / "db.sqlite3"}',
        conn_max_age=600
    )
}

# --- Password validation ---
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# --- Internationalization ---
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# --- Static files (CSS, JavaScript, Images) ---
STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# Production मध्ये collectstatic साठी
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- DRF Settings ---
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

# --- Auth URLs ---
LOGIN_REDIRECT_URL = '/map/'
LOGOUT_REDIRECT_URL = '/'
LOGIN_URL = '/login/'

# --- PWA Settings ---
PWA_APP_NAME = 'Location Tracker'
PWA_APP_DESCRIPTION = "A simple real-time location tracker"
PWA_APP_THEME_COLOR = '#343a40'
PWA_APP_BACKGROUND_COLOR = '#ffffff'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/'
PWA_APP_START_URL = '/'
PWA_APP_ICONS = [
    {'src': '/static/images/icon-192x192.png', 'sizes': '192x192'},
    {'src': '/static/images/icon-512x512.png', 'sizes': '512x512'}
]

# --- Custom Settings ---
# Google Maps API की येथे टाका
GOOGLE_MAPS_API_KEY = os.environ.get(
    'GOOGLE_MAPS_API_KEY', 'AIzaSyAuhxLHZ6GCdtY6OMtw72IUkJG8dA66Nfc')
